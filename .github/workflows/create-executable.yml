name: Default build

on:
  push:
    branches:
    - "*"
  workflow_dispatch:  # Manually trigger workflow

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Run tests
      run: |
        python -m coverage run -m unittest tests/*.py

    - name: Build with PyInstaller
      run: python src/remoteplay-runner.py --create-executable

    - name: Install go-msi
      run: choco install -y "go-msi"

    - name: cleanup
      run: Remove-Item -Path .\build -Recurse -Force

    - name: Build Windows Installer MSI from exe file
      uses: AliceOh/CreateWindowsInstaller@1.0.0
      with:
        exefile: ./dist/remoteplay.exe

    - name: fix artifact name
      run: Rename-Item -Path .\dist\remoteplay.exe.msi -NewName remoteplay.msi

    - name: Save artifact
      uses: actions/upload-artifact@master
      with:
        name: win-exe
        path: ./dist/remoteplay.msi

  build-macos:
    runs-on: macos-12

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Run tests
      run: |
        python -m coverage run -m unittest tests/*.py

    - name: Build with PyInstaller
      run: python src/remoteplay-runner.py --create-executable

    - name: Clean output dir
      run: rm -rf dist/remoteplay

    - name: Add readme
      run: cp README.md images/Applications dist

    - name: Add DS_Store
      run: cp images/DS_Store dist/.DS_Store

    - name: Create DMG
      run: hdiutil create -format UDZO -ov -volname RemotePlay -srcfolder dist RemotePlay.dmg

    - name: Save artifact
      uses: actions/upload-artifact@master
      with:
        name: mac-app
        path: ./RemotePlay.dmg

  create_release:
    # Wait for the build job to complete
    needs:
      - build-windows
      - build-macos
    runs-on: ubuntu-latest  # Use Ubuntu to trigger manual steps
    if: github.event_name == 'workflow_dispatch'
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set version
      id: version
      run: echo "::set-output name=version::$(grep ^version pyproject.toml | cut -d \" -f 2)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:      
        tag_name: ${{ steps.version.outputs.version }}
        release_name: ${{steps.version.outputs.version}}
        draft: false
        prerelease: false

    - name: Unsave windows artifact
      uses: actions/download-artifact@master
      with:
        name: win-exe
        path: ./dist

    - name: Unsave mac artifact
      uses: actions/download-artifact@master
      with:
        name: mac-app
        path: ./dist

    - name: Debug
      run: ls -l dist

    - name: Upload Windows Release Asset
      id: upload-windows-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/remoteplay.msi
        asset_name: remoteplay.msi
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      id: upload-macos-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/RemotePlay.dmg
        asset_name: RemotePlay.dmg
        asset_content_type: application/octet-stream
